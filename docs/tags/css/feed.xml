<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Css on Varun Pant</title><link>https://varunpant.com/tags/css/</link><description>Recent content in Css on Varun Pant</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 13 Jul 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://varunpant.com/tags/css/feed.xml" rel="self" type="application/rss+xml"/><item><title>CCS3 only Loading Icon</title><link>https://varunpant.com/posts/ccs3-only-loading-icon/</link><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/ccs3-only-loading-icon/</guid><description>
&lt;p&gt;I generally have been using loading gifs in my work most of the time to inform the user that the resources are being fetched asynchronously from the server.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ajaxload.info/"&gt;Ajaxload&lt;/a&gt; website is perhaps one of the most used site to download a suitable gif.&lt;/p&gt;
&lt;p&gt;In this post I will demonstrate a css3 only way to create a nice loading simulation&lt;/p&gt;
&lt;h3 id="basic-code"&gt;
Basic Code
&lt;a href="#basic-code" class="h-anchor" aria-hidden="true"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;We will use nested divs to create the loading animation control ```&lt;/p&gt;</description></item><item><title>Position div in the center of the page using css</title><link>https://varunpant.com/posts/position-div-in-the-center-of-the-page-using-css/</link><pubDate>Sun, 27 Jan 2013 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/position-div-in-the-center-of-the-page-using-css/</guid><description>
&lt;p&gt;When I first started web programming, creating a center aligned div was one of the most common task that I saw myself doing.&lt;/p&gt;
&lt;p&gt;since div is a block element, i.e. it takes up the full width available, and has a line break before and after it, it can easily be centered using relative styling&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-.center" data-lang=".center"&gt;{
margin-left:auto;
margin-right:auto;
width:70%;
background-color:#b0e0e6;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However lately I have preferred using absolute positioning technique over relative, this works for all browsers and is best for login screens or alert messages over a translucent shim.&lt;/p&gt;</description></item><item><title>Cross browser drop shadow with CSS3</title><link>https://varunpant.com/posts/cross-browser-drop-shadow-with-css3/</link><pubDate>Wed, 23 Jan 2013 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/cross-browser-drop-shadow-with-css3/</guid><description>
&lt;p&gt;When &lt;strong&gt;css3&lt;/strong&gt; arrived, one of the goodies that I found was, the inclusion of &lt;strong&gt;Drop Shadow effect&lt;/strong&gt;, namely **Box Shadow **and &lt;strong&gt;Text Shadow&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here I present a cross browser utility css class which can be used for a drop shadow effect, without any image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;.&lt;span style="color:#a6e22e"&gt;shadow&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;/* For IE 8 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;-ms-&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;filter&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&amp;#39;#000000&amp;#39;)&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;/* For IE 5.5 - 7 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;filter&lt;/span&gt;: progid&lt;span style="color:#f92672"&gt;:&lt;/span&gt;DXImageTransform&lt;span style="color:#f92672"&gt;.&lt;/span&gt;Microsoft&lt;span style="color:#f92672"&gt;.&lt;/span&gt;&lt;span style="color:#a6e22e"&gt;Shadow&lt;/span&gt;(Strength&lt;span style="color:#960050;background-color:#1e0010"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;, Direction&lt;span style="color:#960050;background-color:#1e0010"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;135&lt;/span&gt;, Color&lt;span style="color:#960050;background-color:#1e0010"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;#000000&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;-moz-&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;box-shadow&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;#000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;-webkit-&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;box-shadow&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;#000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;box-shadow&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;px&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;#000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For cross browser &lt;strong&gt;text shadow&lt;/strong&gt; effect ,I found a nice article &lt;a href="http://www.workingwith.me.uk/examples/css-drop-shadows.html#final_example"&gt;here&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Cross browser CSS3 border-radius (rounded corners)</title><link>https://varunpant.com/posts/cross-browser-css3-border-radius-rounded-corners/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/cross-browser-css3-border-radius-rounded-corners/</guid><description>
&lt;p&gt;When I started programming and had to begin designing my first user interface in HTML, I was always puzzled as to why are all visual elements in HTML rectangular. I soon learned that in those days if one would want a circle to be drawn on a page, then the only way possible was using an image, the same was true for drawing elements with rounded corners.&lt;/p&gt;
&lt;p&gt;Thankfully HTML5/CSS3 guys were listening and the latest css3 standard supports defining the corner radius of a circle, this can be used to make an element look like a circle too if you want.&lt;/p&gt;</description></item><item><title>Cross Browser Opacity or Transparency</title><link>https://varunpant.com/posts/cross-browser-opacity-or-transparency/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/cross-browser-opacity-or-transparency/</guid><description>
&lt;p&gt;Css has a very useful property called Opacity, which basically is a measure of transparency of an element.&lt;/p&gt;
&lt;p&gt;All modern browsers &lt;em&gt;Yes yes even &lt;strong&gt;IE&lt;/strong&gt;&lt;/em&gt; has support for it.&lt;/p&gt;
&lt;p&gt;In most browsers the value is between &lt;strong&gt;0&lt;/strong&gt; &lt;em&gt;minimum [transparent] i.e not visible&lt;/em&gt; to &lt;strong&gt;1&lt;/strong&gt; &lt;em&gt;maximum [opaque] i.e. completely visible&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;IE&lt;/strong&gt; the value is between 0 and 100 &lt;em&gt;,don&amp;rsquo;t ask why they just like to make us unhappy.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here I present a helper css class which will work in all browsers.&lt;/p&gt;</description></item><item><title>Image Carousel</title><link>https://varunpant.com/posts/image-carousel/</link><pubDate>Tue, 29 Jun 2010 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/image-carousel/</guid><description>
&lt;p&gt;Here is another of many JavaScript based Image Carousel, I had seen many similar to these made in SilverLight and Flash, I came across a wonderful &lt;a href="http://www.shinedraw.com/animation-effect/flash-vs-silverlight-image-carousel/"&gt;carousel&lt;/a&gt; made in SilverLight sometimes back which was very fluid in behavior and could easily be customized and configured to take various shape and form.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.varunpant.com/static/resources/carousel.png"&gt;&lt;img src="http://www.varunpant.com/static/resources/carousel_thumb.png" alt="carousel" title="carousel"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have managed to port it to JavaScript, it works best on chrome or FF, hope this would be fun to play with.&lt;/p&gt;</description></item></channel></rss>