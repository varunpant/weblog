<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>isochrone on Varun Pant</title><link>https://varunpant.com/tags/isochrone/</link><description>Recent content in isochrone on Varun Pant</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Dec 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://varunpant.com/tags/isochrone/feed.xml" rel="self" type="application/rss+xml"/><item><title>Creating Isochrones and Isodistances using Googles Direction Search API</title><link>https://varunpant.com/posts/creating-isochrones-and-isodistances-using-googles-direction-search-api/</link><pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/creating-isochrones-and-isodistances-using-googles-direction-search-api/</guid><description>Introduction Isochrones are curves of equal travel time from a certain point of origin, another way of saying this would be that an Isochrone is an isoline for travel time, if the weighting factor is changed form time to distance, then the resulting curve us called an Isodistance.
In this post I will present a rough way to create an Isochrone and an Isodistance using google's directions API.
Algorithm The actual algorithm to calculate Isocrone or Isodistance is perhpas a bit complicated than the simplistic approach being described here, if you are intrested in having a deeper look then I would recommend visiting this link by OpenStreetMap folks.</description></item></channel></rss>