<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Html5 on Varun Pant</title><link>https://varunpant.com/tags/html5/</link><description>Recent content in Html5 on Varun Pant</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 21 Dec 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://varunpant.com/tags/html5/feed.xml" rel="self" type="application/rss+xml"/><item><title>HTML Geolocation and Altitude</title><link>https://varunpant.com/posts/html-geolocation-and-altitude/</link><pubDate>Sun, 21 Dec 2014 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/html-geolocation-and-altitude/</guid><description>
&lt;p&gt;HTML5 Geolocation is a feature which allows the browser on a computer or a mobile phone, to acquire the position from the wifi,2g/3g/4g network or GPS.&lt;/p&gt;
&lt;p&gt;The HTML Geolocation API is used to get the geographical position of a user. Since this can compromise user privacy, the position is not available unless the user approves it. The simplest way to use it through navigator.geolocation object ```
if (navigator.geolocation) {
navigator.geolocation.getCurrentPosition(showPosition);&lt;/p&gt;</description></item><item><title>CCS3 only Loading Icon</title><link>https://varunpant.com/posts/ccs3-only-loading-icon/</link><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/ccs3-only-loading-icon/</guid><description>
&lt;p&gt;I generally have been using loading gifs in my work most of the time to inform the user that the resources are being fetched asynchronously from the server.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ajaxload.info/"&gt;Ajaxload&lt;/a&gt; website is perhaps one of the most used site to download a suitable gif.&lt;/p&gt;
&lt;p&gt;In this post I will demonstrate a css3 only way to create a nice loading simulation&lt;/p&gt;
&lt;h3 id="basic-code"&gt;
Basic Code
&lt;a href="#basic-code" class="h-anchor" aria-hidden="true"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;We will use nested divs to create the loading animation control ```&lt;/p&gt;</description></item><item><title>Raphael JS Tutorial - Part I</title><link>https://varunpant.com/posts/raphael-js-tutorial-part-i/</link><pubDate>Sun, 10 Mar 2013 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/raphael-js-tutorial-part-i/</guid><description>
&lt;p&gt;&lt;a href="http://raphaeljs.com/"&gt;Raphael.JS&lt;/a&gt; is a SVG/VML library which helps you to create quick vector shapes and images. Its very small and compact (only 86kb),easy to use,well documented and works in all browsers and yes even IE. Here is a list of all major browsers this library works on: &lt;a href="http://en.wikipedia.org/wiki/Chrome_browser"&gt;Chrome&lt;/a&gt; 5.0+ &lt;a href="http://en.wikipedia.org/wiki/Firefox"&gt;Firefox&lt;/a&gt; 3.0+, &lt;a href="http://en.wikipedia.org/wiki/Safari_%28web_browser%29"&gt;Safari&lt;/a&gt; 3.0+, &lt;a href="http://en.wikipedia.org/wiki/Opera_%28web_browser%29"&gt;Opera&lt;/a&gt; 9.5+ and &lt;a href="http://en.wikipedia.org/wiki/Internet_Explorer"&gt;Internet Explorer&lt;/a&gt; 6.0+&lt;/p&gt;
&lt;p&gt;,finally its distributed under &lt;a href="http://raphaeljs.com/license.html"&gt;MIT license&lt;/a&gt;. In this tutorial ,I intend to introduce basics of this library and help you get started.&lt;/p&gt;</description></item><item><title>Liquid Particles</title><link>https://varunpant.com/posts/liquid-particles/</link><pubDate>Sat, 03 Jul 2010 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/liquid-particles/</guid><description>
&lt;p&gt;After ages of constantly being one of the most used browser as well as a serious pain in Butt!!! IE is finally about to mature into something good and perhaps a useful software , with its support to &lt;a href="http://www.quirksmode.org/blog/archives/2010/06/more_ie9_goodne.html"&gt;most&lt;/a&gt; of the standards being used today , IE will join back the league of web 3.0 browsers, hopefully very soon&lt;/p&gt;
&lt;p&gt;So I was going through various experiments done with Canvas and came across a great example on &lt;a href="http://spielzeugz.de/html5/liquid-particles.html"&gt;Liquid Particle physics simulation&lt;/a&gt;, which amazingly is written in JavaScript and Canvas element, I was so mesmerized by the application that I had to port it to &lt;a href="http://msdn.microsoft.com/en-us/bb187358.aspx"&gt;SilverLight&lt;/a&gt;, using &lt;a href="http://msdn.microsoft.com/en-us/library/system.windows.media.imaging.writeablebitmap.aspx"&gt;WritableBitmap&lt;/a&gt;.&lt;/p&gt;</description></item></channel></rss>