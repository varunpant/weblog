<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gis on Varun Pant</title><link>https://varunpant.com/tags/gis/</link><description>Recent content in gis on Varun Pant</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Feb 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://varunpant.com/tags/gis/feed.xml" rel="self" type="application/rss+xml"/><item><title>gdal 2 on mac with homebrew</title><link>https://varunpant.com/posts/gdal-2-on-mac-with-homebrew/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/gdal-2-on-mac-with-homebrew/</guid><description>GDAL is one of the most frequently used utility in my toolkit. I am writing this post to make it easier for others to install it from scratch on their macs.
Setting up GDAL The traditional way has always been to visit the dear old kyngchaos.com, and install “GDAL Complete” Framework vi deb installer. Do make sure that GDAL Framework is in your path otherwise something like this always helps</description></item><item><title>How to create fishnets or geospatial grids</title><link>https://varunpant.com/posts/how-to-create-fishnets-or-geospatial-grids/</link><pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/how-to-create-fishnets-or-geospatial-grids/</guid><description>There are many use cases in GIS world, where the information has to be aggregated, an easy way to achieve this is via gridding or binning, where the area of interest is divided into small sections called grids or bins.
These sections are mostly of rectangular form (which can be easily converted into geotiffs), but in some cases even circles or hexagons are also used.
You can read a good tutorial from mapbox using Qgis with a mmqgis plugin here.</description></item><item><title>How to transform projections between Spherical Mercator and EPSG 4326</title><link>https://varunpant.com/posts/how-to-transform-projections-between-spherical-mercator-and-epsg-4326/</link><pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/how-to-transform-projections-between-spherical-mercator-and-epsg-4326/</guid><description>Projections in GIS are commonly referred to by their “EPSG” codes, these are identifiers managed by the European Petroleum Survey Group.
One common identifier is “EPSG:4326”, which describes maps where latitude and longitude are treated as X/Y values.
Spherical Mercator has an official designation of EPSG:3857. However, before this was established, a large amount of software used the identifier EPSG:900913. This is an unofficial code, but is still the commonly usedin many GIS systems.</description></item><item><title>How to Query a Shape file for Point inside a polygon using ogr python</title><link>https://varunpant.com/posts/how-to-query-a-shape-file-for-point-inside-a-polygon-using-ogr-python/</link><pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/how-to-query-a-shape-file-for-point-inside-a-polygon-using-ogr-python/</guid><description>Recently I was trying to build a quick geo lookup service in python, which could be used like an &amp;ldquo;info tool&amp;rdquo; in QGIS. This task is trivial in almost all geospatial databases, however I wasn't able to find much online around querying a shape file.
In this post I will demonstrate a simple python code to query a shape file which contains world countries. The file can be downloaded from here.</description></item><item><title>Serving raster layers on Google Cloud Platform</title><link>https://varunpant.com/posts/serving-raster-layers-on-google-cloud-platform/</link><pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/serving-raster-layers-on-google-cloud-platform/</guid><description>In this blog post, I will write about using Google cloud storage as a Raster Tile Server for static imagery.
In the GIS domain, various techniques are used to add custom raster overlay on top of a base maps, or to even use custom imagery, as a base map itself.
This approach is also useful if you have a large quantity of satellite or aerial imagery, that you need to serve at scale onto a Google map or any other GIS tool.</description></item><item><title>Gheat Java – Heat maps</title><link>https://varunpant.com/posts/gheat-java-heat-maps/</link><pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/gheat-java-heat-maps/</guid><description>A heat map is a graphical representation of data where the individual values contained in a matrix are represented as colors.
This article will attempt to explain the process or creating and using GHEAT-JAVA, which is a port of famous aspen based gheat and took great inspiration from Gheat.net
Writing a service which would serve heat map tiles is a bit tricky,there are three major components involved
The client part i.</description></item><item><title>Find Longitude and Latitude in Google Maps</title><link>https://varunpant.com/posts/find-longitude-and-latitude-in-google-maps/</link><pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate><guid>https://varunpant.com/posts/find-longitude-and-latitude-in-google-maps/</guid><description>This post is basically a way of quick appreciation to the Google maps Team, they are obviously a bunch of caring, loving people ,who make useful (although surreptitious) tools for the betterment of Geek Kind.
So as most of you may have accidently clicked a mysterious looking link at the bottom of your Google maps page ( on the left hand panel)
This awesome looking link opens up a popup which lets you choose wonderful goodies which makes your Google maps page more useful than it already is:</description></item></channel></rss>